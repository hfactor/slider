"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[166],{8246:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var s=t(5723),i=t(5298);const o={title:"Custom Effect"},d=void 0,r={id:"guides/custom-effect",title:"Custom Effect",description:"It's possible to create your own custom effects for BoxSlider with an object that",source:"@site/docs/guides/09-custom-effect.md",sourceDirName:"guides",slug:"/guides/custom-effect",permalink:"/slider/docs/guides/custom-effect",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Custom Effect"},sidebar:"docsSidebar",previous:{title:"Accessibility",permalink:"/slider/docs/guides/accessibility"}},a={},l=[{value:"Animation",id:"animation",level:2},{value:"Destroying an effect",id:"destroying-an-effect",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["It's possible to create your own custom effects for BoxSlider with an object that\nimplements the slide ",(0,s.jsx)(n.a,{href:"https://github.com/p-m-p/slider/blob/main/packages/slider/src/types.ts#L128",children:"Effect interface"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Considering an example where the slide visibility is controlled by the CSS ",(0,s.jsx)(n.code,{children:"display"})," property,\nthe ",(0,s.jsx)(n.code,{children:"initialize"})," method sets the initial display value of all slides and the ",(0,s.jsx)(n.code,{children:"transition"})," method\nupdates the display setting of the current and next slide so that the next slide is made visible."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const effect = {\n  initialize(el, slides, options) {\n    slides.forEach((slide, index) =>\n      slide.style.setProperty(\n        'display',\n        index === options.startIndex ? 'block' : 'none',\n      ),\n    )\n  },\n\n  transition({ currentIndex, nextIndex }) {\n    this.slides[currentIndex].style.setProperty('display', 'none')\n    this.slides[nextIndex].style.setProperty('display', 'block')\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The effect object is passed to the ",(0,s.jsx)(n.code,{children:"BoxSlider"})," constructor as the second argument."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { BoxSlider } from '@boxslider/slider'\n\nconst slider = new BoxSlider(document.getElementById('slider'), effect)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"animation",children:"Animation"}),"\n",(0,s.jsxs)(n.p,{children:["An effect that animates the slide transition should return a promise that resolves when the animation\nis finished. The animation speed is determined from the ",(0,s.jsx)(n.code,{children:"speed"})," option set in the slider options that\nis provided in the transition settings passed to the ",(0,s.jsx)(n.code,{children:"transition"})," method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const effect = {\n  initialize(el, slides, options) {\n    el.style.setProperty('position', 'relative')\n\n    slides.forEach((slide, index) => {\n      slide.style.setProperty('position', 'absolute')\n      slide.style.setProperty(\n        'opacity',\n        index === options.startIndex ? '1' : '0',\n      )\n    })\n  },\n\n  async transition({ slides, speed, currentIndex, nextIndex }) {\n    const animateOut = slides[currentIndex].animate(\n      { opacity: [1, 0], transform: ['scale(1)', 'scale(0.9)'] },\n      { duration: speed, fill: 'forwards' },\n    )\n    const animateIn = slides[nextIndex].animate(\n      { opacity: [0, 1], transform: ['scale(0.9)', 'scale(1)'] },\n      { duration: speed, fill: 'forwards' },\n    )\n\n    await Promise.all([animateIn.finished, animateOut.finished])\n  },\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"destroying-an-effect",children:"Destroying an effect"}),"\n",(0,s.jsxs)(n.p,{children:["When a slider is destroyed via the ",(0,s.jsx)(n.code,{children:"destroy"})," method any style properties applied by the effect to the slider\nand slide elements will be either reset to their original values or removed by the ",(0,s.jsx)(n.code,{children:"BoxSlider"})," object.\nIf the effect has any clean up to perform then a ",(0,s.jsx)(n.code,{children:"destroy"})," method can be added to the effect object."]}),"\n",(0,s.jsxs)(n.p,{children:["In the animation example the animations will persist on the slide elements after the slider is destroyed due\nto the ",(0,s.jsx)(n.code,{children:"fill"})," setting of 'forwards'. These animations can be cancelled in the ",(0,s.jsx)(n.code,{children:"destroy"})," method."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"destroy(el, slides) {\n  slides.forEach((slide) => {\n    slide.getAnimations().forEach((animation) => animation.cancel())\n  })\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The examples provided here are for illustrative purposes and may not be suitable for production use. You\nshould consider browser compatibility, accessibility and performance when creating custom effects."})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},5298:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var s=t(2155);const i={},o=s.createContext(i);function d(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);