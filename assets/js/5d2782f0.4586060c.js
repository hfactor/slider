"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9097],{7874:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var t=n(5723),s=n(3327);const o={title:"Accessibility"},r=void 0,l={id:"guides/accessibility",title:"Accessibility",description:"The easiest way to make the slider accessible is to use the Slider Controls",source:"@site/docs/guides/06-accessibility.md",sourceDirName:"guides",slug:"/guides/accessibility",permalink:"/slider/docs/guides/accessibility",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Accessibility"},sidebar:"docsSidebar",previous:{title:"Styling",permalink:"/slider/docs/guides/styling"}},c={},a=[];function d(e){const i={a:"a",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:["The easiest way to make the slider accessible is to use the ",(0,t.jsx)(i.a,{href:"/docs/guides/slider-controls",children:"Slider Controls"}),"\ncomponent with the default controls. The controls implement the\n",(0,t.jsx)(i.a,{href:"https://www.w3.org/WAI/ARIA/apg/patterns/carousel/",children:"WAI-ARIA design pattern"})," for carousels."]}),"\n",(0,t.jsx)(i.p,{children:"If you are using the core JavaScript library directly or building your own control you will need to add\nsome appropriate attributes to the slider and slide elements."}),"\n",(0,t.jsxs)(i.p,{children:["The slider element will automatically be given a ",(0,t.jsx)(i.code,{children:"role"})," of ",(0,t.jsx)(i.code,{children:"region"})," if role is not already set, applied with the\n",(0,t.jsx)(i.code,{children:'aria-live="off"'})," attribute when it is in the autoScroll state and ",(0,t.jsx)(i.code,{children:'aria-live="polite"'})," when slide\ntransitions are being controlled externally. Each slide is given the ",(0,t.jsx)(i.code,{children:'aria-roledescription="slide"'}),"\nattribute and the ",(0,t.jsx)(i.code,{children:"role"})," of ",(0,t.jsx)(i.code,{children:"group"})," if these area not already set. You will need to add\n",(0,t.jsx)(i.code,{children:'aria-roledescription="carousel"'})," to the container housing the slider and it's controls. An example\nimplementation is shown below."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-html",children:'<section class="carousel" aria-roledescription="carousel">\n  <div class="slider-controls">\n    <button id="prev-slide" aria-controls="demo-slider">Previous slide</button>\n    <button id="next-slide" aria-controls="demo-slider">Next slide</button>\n    <button id="play" aria-controls="demo-slider">Play</button>\n  </div>\n\n  <div class="slider" id="demo-slider" role="region">\n    <figure class="slide" role="group">\n      <img src="happy-face.jpg" alt="A young boy with a smile on his face" />\n      <figcaption>Happy</figcaption>\n    </figure>\n    <figure class="slide" role="group">\n      <img\n        src="sad-face.jpg"\n        alt="An elderly lady with a sad look on her face" />\n      <figcaption>Sad</figcaption>\n    </figure>\n    <figure class="slide" role="group">\n      <img\n        src="shocked-face.jpg"\n        alt="A man with a look of shock on his face" />\n      <figcaption>Shocked</figcaption>\n    </figure>\n  </div>\n</section>\n\n<script>\n  const slider = new BoxSlider(\n    document.getElementById(\'demo-slider\'),\n    new CarouselSlider(),\n    {\n      autoScroll: false,\n    },\n  )\n\n  document\n    .getElementById(\'prev-slide\')\n    .addEventListener(\'click\', () => slider.prev())\n  // ... other button controls\n<\/script>\n'})})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},3327:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>l});var t=n(2155);const s={},o=t.createContext(s);function r(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);